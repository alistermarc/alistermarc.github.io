---
import BaseLayout from "../layouts/BaseLayout.astro";
import HorizontalCard from "../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import createSlug from "../lib/createSlug"

const posts = (await getCollection("blog")).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const last_posts = posts.slice(0, 3);
---

<BaseLayout sideBarActiveItemID="home">
  <div class="pb-12 mt-5">
    <div class="text-xl py-1">Hey there ðŸ‘‹</div>
    <div class="text-5xl font-bold">I'm Alister Marc Domilies</div>
    <div class="text-2xl py-3 font-bold">A Chemical Engineer turned into an AI Engineer</div>
    <div class="py-2">
      <text class="text-lg">
        My passion for mathematics and programming led me first to Data Analytics and later to Artificial Intelligence. I have strong experience across the full data lifecycleâ€”from data engineering and analysis to modeling and deployment. 
        My Masterâ€™s in AI allowed me to master the fundamentals of the field, and Iâ€™m now focusing on natural language processing, particularly on how large language models can drive impact for companies.
      </text>
    </div>
    <div class="mt-8">
      <a class="btn" href="https://www.linkedin.com/in/alister-marc-d-4332b81b4" target="_blank"> Let's connect!</a>
      <a href="https://github.com/alistermarc" target="_blank" class="btn btn-outline ml-5">
        Github Repo
      </a>
    </div>
  </div>

  <div>
    <div class="text-3xl w-full font-bold mb-2">My last projects {"</>"}</div>
  </div>

  <HorizontalCard
    title="Vertex AI Multi-Agent Framework with RAG, SOP, and BigQuery Agents"
    img="/project1.webp"
    desc="A multi-agent system on Vertex AI using Googleâ€™s ADK, featuring a manager that delegates to specialized agents: a RAG agent for document retrieval, an SOP agent for procedures in Google Sheets, and a BigQuery agent for natural language to SQL queries. It showcases how multi-agent orchestration can unify knowledge retrieval, procedural guidance, and data analytics."
    url="https://github.com/alistermarc/TWC_Hackathon_2"
    badge="NEW"
  />
  <div class="divider my-0"></div>
  <HorizontalCard
    title="Agentic Workflow for Electronics Data Extraction"
    img="/project2.webp"
    desc="An agentic pipeline for extracting structured data from unstructured electronics datasheets (PDFs). The system combines OCR, markdown conversion, chunking, and LLM-driven parsing in a graph-based workflow to capture manufacturer part numbers, descriptions, packaging, and markings. It includes intelligent filtering, retries, and validation, producing clean, deduplicated outputs for large-scale electronics data processing."
    url="https://github.com/alistermarc/Agentic-Workflow-for-Electronics-Data-Extraction"
  />
  <div class="divider my-0"></div>
  <HorizontalCard
    title="RAG Chatbot for Government Documents"
    img="/project3.webp"
    desc="A Django-based Retrieval-Augmented Generation (RAG) chatbot designed for government ordinances and resolutions. It integrates AWS Textract for document parsing, Weaviate for vector search, and the OpenAI API for generation, enabling natural language queries with accurate, source-grounded answers to improve access to government information."
    url="https://github.com/alistermarc/Capstone-Project"
  />

  <div>
    <div class="text-3xl w-full font-bold mb-5 mt-10">Latest from blog</div>
  </div>

  {
    last_posts.map((post) => (
      <>
        <HorizontalCard
          title={post.data.title}
          img={post.data.heroImage}
          desc={post.data.description}
          url={"/blog/" + createSlug(post.data.title, post.slug)}
          target="_self"
          badge={post.data.badge}
        />
        <div class="divider my-0" />
      </>
    ))
  }
</BaseLayout>
